.. _how-to:

操作指南
=============

..  rubric:: 操作指南是通过 **步骤指引** 带领读者解决问题或实现结果的指导性文档，其本质是 **以目标为导向** 的实用说明。

===========

操作指南帮助用户正确且安全地完成某项任务；它引导用户的 *行为*。

它关注的是*实际工作*——如何在实际问题领域中实现从一端到另一端的导航。

..  image:: /images/overview-how-to.png
    :alt: How-to guides - task oriented, practical steps, that serve our work
    :class: sidebar

例如： *如何校准雷达阵列*； *如何在 pytest 中使用 fixture*； *如何配置重连退避策略*。另一方面， *如何构建 Web 应用程序* 则不属于此类——这并未针对特定目标或问题，而是一个极度开放式的技能领域。

操作指南的重要性不仅在于用户需要完成任务：文档中的操作指南清单有助于勾勒出产品实际 *功能* 的图景。丰富的操作指南列表能有效暗示产品的能力范围。

针对正确问题撰写的优质操作指南，往往会成为文档中被阅读最频繁的部分。

=================

操作指南针对具体问题
-----------------------------------

**操作指南必须从用户视角而非机器视角编写**。操作指南代表用户需要完成的具体任务，换言之，其内容应由用户需求定义。每篇操作指南都应服务于用户的实际项目，明确展示用户如何利用现有工具达成目标结果。

这与当前普遍存在的操作指南模式形成鲜明对比——后者通常将操作指南定义为针对某个工具或系统可执行的操作步骤。这种模式的弊端在于它几乎无法为用户创造实际价值。这些指南并未针对用户的任何实际需求。相反，它们聚焦于工具本身，机械性地演示操作流程。

这本质上是一种 *意义性* 的区分。意义由目的和需求赋予。机器的功能运作中不存在目的或需求，它仅仅是因果链条的输入与输出。

考虑以下示例：

* "为了关闭水流，请顺时针旋转水龙头。"
* "要部署所需的数据库配置，请选择相应选项并点击 **部署**。"

..  sidebar:: 
    
    我们确实不需要被告知如何用电源开关启动设备，但令人震惊的是，软件文档中的操作指南却常常停留在这个水平。

上文的示例 *看似* 属于操作指南，实则并非如此。

这些内容大多属于无用信息——任何具备基础能力的人（即在该领域工作的人员）都应掌握这些常识。标准化接口与普遍预期知识相结合，应当能清晰呈现大多数操作的实际效果。

其次，它们与使用目的脱节。用户真正需要了解的信息可能包括：

* 针对特定用途，应调节多大的水流强度及水量
* 哪些数据库配置选项符合实际业务需求

..  sidebar:: 
    
    操作指南应聚焦目标、项目与问题，而非工具本身。
    
工具在操作指南中往往作为辅助角色出现，是实现用户目标的途径。当然，当特定目标与特定工具或系统组件紧密关联时，您会发现该操作指南确实会重点讨论该工具。同样常见的是，操作指南会横跨系统中的不同工具或组件，通过一系列由用户需求定义的操作将它们串联起来。无论是哪种情况，操作指南的覆盖范围都由具体项目需求决定。


=================

操作指南的边界定义
--------------------------

**操作指南与教程截然不同**。 尽管常被混淆，但二者服务的用户需求存在本质差异。将两者混为一谈正是导致文档问题的根源所在。关于这一区别的详细讨论，请参阅 :ref:`tutorials-how-to` 这一节。

另一个常见的误解是将操作指南简单等同于流程说明。但解决问题或完成任务并非总能简化为线性流程，现实问题往往不适用于按部就班的解决方案。操作指南中的动作序列有时需要分叉和重叠，并且具有多个入口点和出口点。通常，操作指南需要用户依靠自身判断来应用其提供的指导。
    

=================

核心原则
---------------------------------------

操作指南聚焦于具体工作——以解决任务或问题为导向， *始终围绕实践目标展开*。

..  sidebar:: 操作指南特性

    * 聚焦任务或问题
    * 假设用户明确目标
    * 仅呈现操作步骤
    * 杜绝偏离、概念解析或教学

任何额外添加的内容都会分散您和用户的注意力，削弱指南的实用价值。常见的诱惑是进行概念解析或为了完整性提供参考内容。这些都不属于引导用户完成工作的范畴。它们会阻碍实际操作；如果确实重要，请以链接形式提供。

操作指南服务于已具备能力的用户，这类用户明确知晓自身需求，并能准确遵循您的指引执行操作。


应对现实复杂性
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**操作指南需具备适应实际用例的灵活性**。若其仅适用于您所处理的特定 *狭窄场景* 而无法满足其他任何需求，则此类指南往往价值有限。您无法覆盖所有可能情况，因此必须采用开放性的设计方式，使用户能够根据自身需求调整您的指导内容。

省略非必要内容
~~~~~~~~~~~~~~~~~~~~

在操作指南中， **实用价值比面面俱到更重要。**教程需要提供完整的端到端指导，而操作指南则不必如此。它只需在合理且有意义的节点开始和结束，并引导读者将其与自身工作经验相结合。


提供一系列指导
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

操作指南描述针对现实问题或任务的 *可执行解决方案*。其形式类似于契约：若您遇到此类情况，则可按照本方法中概述的步骤流程逐步解决问题。这些步骤均以具体操作的形式呈现。

此处的"操作"不仅包括物理行为，还涵盖思考与判断——解决问题需要缜密思考。操作指南既要指导用户的具体操作，也要引导用户的思维过程。


描述逻辑顺序
~~~~~~~~~~~~~~~~~~~~~~~~~~~

操作指南的基本结构是 *序列化* 的。这意味着其步骤按时间顺序进行逻辑排列，特定的顺序存在其意义与作用。

在许多情况下，顺序是由事物本身的必然性决定的（例如第二步必须在第一步完成后进行）。此时，操作指南的步骤顺序应当不言自明。

有时需求更为微妙——可能两种操作以任意顺序*执行*皆可，但若某项操作能帮助建立用户的工作环境，甚至通过引导思维来促进另一项操作，这便是将其置于首位的充分理由。


寻求心流
~~~~~~~~~

始终尝试将操作步骤根植于*用户*的活动和思维模式中，使指南获得*心流*体验：即流畅的推进过程。 

实现心流意味着成功理解用户。在编排步骤时关注感知与意义，关注人类的思维和行为方式，以及遵循指引者的需求。

同样，这一点可能显而易见：让用户反复在不同上下文和工具间切换的工作流显然笨拙且低效。但您需要更深层次地思考：您要求用户关注哪些内容？他们在工作过程中思维如何在不同主题间自然流动？您要求用户在将想法付诸行动前保持思考状态多久？如果需要用户回溯处理先前的关注点，这种操作是必要还是可避免的？

操作指南不仅关注时间上的逻辑顺序，更强调随时间推移发生的具体操作。操作及其指引具有节奏与韵律。不当的节奏把控或断裂的韵律都会破坏流畅性。

最理想的操作指南能为用户提供流畅的体验。当用户遇到一份仿佛能 *预判需求* 的指南时，会产生独特的感受——这就像有位助手早已备好您正要拿的工具，随时准备递到您手中。


注意命名规范
~~~~~~~~~~~~~~~~~~~~~~~~

**为操作指南选择能准确体现其内容的标题。**

* 优秀示例: *如何集成应用性能监控*
* 欠佳示例: *集成应用性能监控*（可能文档内容是关于是否应该集成，而非具体操作方法）
* 较差示例: *应用性能监控* （这可能涉及*操作方式*——但也可能涉及*操作可行性*，甚至仅仅是对其*本质*的说明）

请注意，搜索引擎和人类一样重视优质的标题。

==============

操作指南用语
-----------------------------

*本指南将向您展示如何...*
    向用户清晰展示如何解决的具体问题或任务。
*如需实现x，请执行y。若要达成w，请执行z。*
    使用条件式指令。
*完整选项列表请参阅x参考手册。*
    不要在实用的操作指南中堆砌用户可能涉及x的所有操作。


================

应用于食品与烹饪
---------------------------

以食谱为例，它是操作指南的绝佳模型。食谱明确定义了遵循它将实现的目标，并 **针对特定问题**（ *如何制作...？* 或 *能用...制作什么？*）。

..  image:: /images/old-recipe.jpg
    :alt: A recipe contains a list of ingredients and a list of steps.

食谱的职责并非 *教授* 烹饪技巧。即便是多次制作过相同菜肴的专业厨师，也可能遵循食谱——即使食谱由他们 *亲自编写*——以确保操作无误。

即便是照着食谱操作，也至少 **需要基本烹饪能力**。不能指望从未下过厨的人能成功按食谱操作，因此食谱并不能替代烹饪教程。

期待获得具体配方的人，若只得到一堂烹饪教学，难免失望与懊恼。同理，虽然了解某道菜肴的背景或历史很有趣，但当您正专注于制作过程时，最不需要的就是面对这些信息。优秀的食谱遵循既定格式，摒弃教学与讨论，只专注于 **如何** 制作目标菜肴。
