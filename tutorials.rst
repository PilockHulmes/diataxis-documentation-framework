.. _tutorials:

教程
=========

..  rubric:: 教程是一种在导师指导下进行的 **体验** 。教程始终以 **学习为导向** 。

===========

教程是一种 *实践性活动*，学生在其中通过动手实践完成有意义的事情，从而学习知识，达成可实现的目标。

教程服务于用户对技能和知识的 *获取* ——— 即他们的学习。其目的不是帮助用户完成某项任务，而是帮助其学习。

..  image:: /images/overview-tutorials.png
    :alt: Tutorials - learning-oriented guides that describe practical steps and are intended to serve our study.
    :class: sidebar

换句话说，一篇教程即一堂课。

需要理解的是：虽然学生通过实践来学习，但学生的 *实践* 内容并不完全等同于他们的 *习得* 内容。通过实践，他们将获得理论知识（即事实）、理解力和熟悉度。他们将学会事物之间的关联与交互方式，以及如何与之互动。他们将掌握事物命名、工具使用、工作流程、概念理解和命令操作等知识。


=================


教程即课程
------------------------

课程涉及教师与学生之间的关系。在此类学习中， *学习发生在学生于导师指导下全身心投入任务的过程中*。

课程是一种 *学习体验*。在学习体验中，关键因素在于学习者的实践过程及其产生的实际效果。相比之下，教师的解释和事实陈述则远没有那么重要。

一堂优质的课程能向学习者展示其在特定技能或产品应用上取得成功的能力，从而建立学习者的信心。


教师的义务
~~~~~~~~~~~~~~~~~~~~~~~~~~~

..  sidebar::

    当老师不容易。

课程是师生之间的一种契约关系，其中几乎全部责任都落在教师身上。教师需要负责确定学生的学习内容、规划学习方式，并确保学生的学习成效。而学生在此契约中唯一的责任就是保持专注，并尽可能严格地遵循教师的指导。学生并不承担学习、理解或记忆的责任。

同时，您为学生设计的练习必须满足以下要求：

* *有意义* - 学生需要获得成就感
* *可完成* - 学生需要能够顺利完成练习
* *符合逻辑* - 学生的练习路径需要具备合理性
* *完整有效* - 学生必须接触到所有需要熟悉的操作、概念和工具


教程类文档的问题
~~~~~~~~~~~~~~~~~~~~~~~~

总体而言，教程类文档鲜有佳作，部分原因在于其撰写本身确实存在难度，部分原因则在于人们对这类文档的理解尚不充分。在软件领域，许多产品缺乏优质教程，甚至完全没有教程；教程也常常与操作指南混为一谈。

在理想的教学场景中，教师会亲临现场，与学生互动并给予反馈，纠正错误并检验学习成果。而在文档体系中，这些都无法实现。

..  sidebar::

    编写和维护教程会耗费大量的精力和时间。

要构建一个符合上述所有标准的学习体验已经相当困难；在许多情况下，产品本身会快速迭代，这意味着所有工作都需要重做以确保教程仍能实现其必备功能。

您还会经常发现，文档的其他部分都不会像教程那样频繁需要修订。在文档的其他部分，改动和优化通常可以独立进行；但在教程中，由于端到端的学习流程必须保持连贯，这些修改往往会引发整个教程的连锁调整。

最后，教程还额外复杂在需要区分 *所学内容* 与 *所学操作*。教程创作者不仅需要准确把握用户必须学习的内容及学习时机，还必须设计出能完整传递所有知识点的有意义学习路径。


=================

核心原则
--------------

教程是一个教学难题。

这并非易事，但也并非无章可循。下文所述的原则——重复练习、实践操作、小步渐进、即时反馈、具体实例等——虽非秘密，却未必被充分理解。

尽管如此，实践中确实存在直接有效的教学方法来解决这些教学难题。

..  sidebar:: 反教学诱惑

    * 抽象化与泛化
    * 概念解析
    * 选择项
    * 信息堆砌

教学的首要原则很简单： **不要试图去教**。作为教师，您的职责是为学习者提供能够促使其学习的体验。教师难免会产生一种传授知识与理解的焦虑感，但若屈服于这种焦虑，试图通过讲述和解释来教学，反而会损害学习体验。

相反， *要让学习自然发生*，并相信它会发生。为学习者提供可 *实践* 的内容，让他们通过实践来学习。只有学习者本人才能完成学习。遗憾的是，无论您多么渴望，都无法代替学习者学习。您无法强迫他们学习，所能做的只是创造 *让他们* 能够学习的条件。


向学习者指明学习方向
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

让学习者从一开始就明确自己将达成何种目标至关重要。这既有助于设定预期，也能让他们在学习过程中看到自己逐步接近最终成果。 

在教程中为学习者提供所需图景很简单，可以在一开始就告知他们： *本教程将指导您创建并部署一个可扩展的Web应用程序。在此过程中，我们将使用容器化工具及相关服务。*

这与以下表述有本质区别： *在本教程中您将学习...* ——这种预设性表述是极其糟糕的范式。


尽早且持续交付可见成果
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

您的学习者可能正在做一些他们尚未完全理解的新奇操作。理解能力源于建立因果关系的能力，因此要让他们快速、反复地看到结果并建立这种联系。每一个结果都应是用户能感知到实际意义的。

学习者遵循的每个步骤都应产生可理解的结果——无论这个结果多么微小。


持续记录预期进展的轨迹
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

在教程的每个步骤中，用户都会经历一个焦虑时刻：这个操作会产生正确结果吗？成功教程的因素之一在于持续向学习者提供反馈，确认他们确实走在正确的道路上。

持续描述预期结果：“您将注意到...”；“片刻之后，服务器会响应...”。向用户展示实际示例输出，甚至是确切的预期输出。

若您能提前预判可能出错的迹象，建议进行标记提示："若输出未显示...，则可能遗漏了..."。

预先告知用户可能出现的意外操作会很有帮助："该命令可能会在终端返回数百行日志。"


指出学习者应注意的事项
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

学习需要反思。这种反思发生在多个层面和深度上，但最早会发生在学习者观察到环境中的信号时。在课程中，学习者通常过于专注于当前操作而忽略这些信号，除非教师主动提示。

作为教师，您的职责是在教学推进过程中通过即时点拨来闭合学习回路。例如，您只需简单指出命令行提示符的变化即可实现这一点。

观察是技艺实践中的主动行为，而非被动接受。它意味着对环境保持专注——这本身就是一项常被忽视的技能。


瞄准 *实践感*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

在任何技艺或工艺中，熟练的实践者都会体验到一种 *实践感*——一种将目标、行动、思考和结果融为一体的状态。

随着技能的提升，这种状态会以自信的节奏流动，成为一种愉悦体验。正如行走时获得的愉悦感。

..  sidebar::

    在工作中关注自身的 *实践感*。执行特定操作时的体验是怎样的？

学习者的技能水平取决于他们能否发现这种感受，并使之成为乐趣。

作为教程创作者，您的挑战在于确保任务设计能将目标与行动有机结合，使之成为孕育这种感受的摇篮。


鼓励并允许重复练习
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

学习者会反复练习那些能带来成功感的任务，因为他们享受获得预期结果的愉悦。这种行为向他们确认了自己能够胜任且方法有效。

重复是建立实践感的关键，而熟悉这种感觉正是学习的基础层。

..  sidebar::

    重复并非最佳导师——有时它是 *唯一* 的导师。

在编写教程时，应确保特定步骤及其结果能够被重复执行。虽然某些不可逆操作（例如难以回退到前序步骤）会带来挑战，但仍需尽可能实现这一点。观察用户跟随教程操作时，您会惊讶地发现他们频繁选择重复某个步骤——仅仅为了确认相同的结果会再次出现。


不遗余力地精简概念解析
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

教程不是进行概念解析的场合。在教程中，用户的注意力集中在正确遵循指引并获得预期结果上。 *后续* 当他们准备好时，自然会寻求解释，但此刻他们关注的是 *实践*。解释会分散他们的注意力，阻碍学习进程。

例如，只需简单说明：*我们使用 HTTPS 是因为它更安全*。关于 HTTPS 的延伸讨论和概念解析自有其适用场景，但绝非当下。应该提供相关解释的链接或参考文献，既保证信息可获取，又不妨碍实践流程。

..  sidebar::

    概念解析仅在 *用户* 需要时才具有相关性。这不应由文档编写者自行决定。

概念解析是教师最难抗拒的诱惑之一，即便是经验丰富的教师也难以接受学生的学习成效并不依赖于概念解析。这种现象再自然不过。一旦我们掌握了某个知识，就会依赖抽象化的力量来构建自己的理解框架——这也正是我们希望向他人传递的认知方式。理解意味着把握大致概念，而抽象化是理解的内在逻辑形式——但这些恰恰是教程中不需要的元素，也绝非成功教学或学习的运作方式。

必须亲眼所见，才能体会当教师善意的解释打破学习魔咒时，学生那种全神贯注的状态如何瞬间消散于无形。


... 并聚焦于具体实践
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

在学习时，学生专注于具体的实践行为。教师的责任在于建立并维持学生的"心流"状态，使其从一个具体实践及结果自然过渡到下一个。

聚焦于 *这个* 问题、 *这个* 操作、 *这个* 结果，以循序渐进的方式引导学习者从具体步骤迈向实质成果。

表面上看，持续聚焦具体细节似乎剥夺了学生认知或把握更宏观通用模式的机会，但事实恰恰相反。我们的大脑有一项非凡能力，就是从具体实例中感知泛化模式。所有学习都遵循同一方向：从具体特例出发，逐步迈向通用抽象。后者 *必将* 从前者的土壤中自然涌现。


忽略选项与替代方案
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

您的职责是引导学习者达成最终目标。过程中可能会出现许多有趣的干扰项（当前使用命令的其他选项、API的不同调用方式、任务描述的其他实现路径）——请一律忽略。 *您的指导必须始终聚焦于达成结论所需的要点*，其余内容均可留待后续处理。

这样做有助于保持教程简洁明了，避免您和读者承受额外的认知负担。


追求完美的可靠性
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

上述内容均为教学法的通用原则，但教程创作者还额外肩负着一项特殊责任。

教程必须能激发信心。信心只能层层累积，并且极易被动摇。在每个教学阶段，当您要求学生完成某项任务时，他们必须看到您所承诺的结果。若学习者遵循您的指引却未能获得预期结果，其对于教程、指导者及自身的信心将迅速瓦解。

..  sidebar::

    您必须身临现场，却注定缺席。

当学习者遇到问题时，现场教师可以及时施以援手。但在教程中，您无法做到这一点。因此您的教程必须构建得足够完善，确保任何情况下都 *不会* 出错，让每位用户每次使用都能获得预期效果。

打造可靠的体验绝非易事，但这正是创作教程时必须追求的目标。

您的教程无论编写得多么谨慎，仍会存在缺陷与疏漏。您无法独自发现所有问题，必须依靠用户反馈来帮您揭示它们。了解这些问题的唯一途径，就是通过大量测试与观察，掌握用户实际操作教程时发生的真实情况。


==============

教程用语
-------------------------

我们...
    第一人称复数"我们"确立了导师与学习者的联结关系：您并非孤军奋战，我们始终同行。
在本教程中，我们将...
    描述学习者将完成的任务。
首先，执行x。接着，执行y。完成y后，继续执行z。
    不容任何歧义或疑问。
在执行y之前，我们必须始终先执行x，因为...（详见概念解析部分）。
    用最简明的语言提供操作说明。为详细概念解析请提供链接。
输出内容应类似于...
    为学习者明确预期目标。
请注意... 请记住... 让我们检查...
    为学习者提供充分的线索，帮助他们确认方向正确并明确自身定位。
您已构建完成一个安全的三层异质休眠引擎...
    描述（并适度赞赏）您的学习者所取得的成就。


===============

应用于食品与烹饪
---------------------------

..  image:: /images/anselmo.jpg
    :alt: A child proudly showing a dish he has helped prepare

有过教孩子烹饪经验的人会明白教程中什么才是关键，同样重要的是，哪些内容根本无关紧要。

孩子制作了什么或做得是否正确并不重要。课程的价值在于孩子收获了什么，而非他们产出了什么。

与孩子共同完成烹饪教程的成功标准，不在于成品效果或孩子能否独立复现操作流程，而在于其是否掌握了您期望传授的知识与技能。

关键前提在于孩子能享受与您共处厨房的体验，并愿意持续参与其中。技能学习绝非一蹴而就，反复实践始终不可或缺。 

与此同时，烹饪教程可能以学习制作特定菜肴为框架，但我们真正需要孩子掌握的应该是： *处理食材前要洗手*； *如何握持刀具*； *为何油必须烧热*； *所使用厨具的名称*； *如何计时和以及称量材料*。

孩子通过 **共同参与厨房活动**，在与您协作的过程中自然而然地掌握这些技能——他们按照自己的节奏、用适合自己的方式，从亲身实践中而非您的言语示范里获得成长。

当孩子年龄较小时，您常会发现教程不得不突然中断——远早于您预设的完成节点。这完全正常且可预见，因为儿童的注意力持续时间本就有限。但只要孩子成功完成了某件事——无论多微小——并乐在其中，这就会在其技术专长的构建过程中奠定基础，成为下次可回溯并进一步拓展的起点。
